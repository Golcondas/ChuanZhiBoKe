<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionandler"/>
  </configSections>
  
  <log4net>
    <logger name="SQL">
      <level value="ALL"/>
      <appender-ref ref="SqlLogFileAppender_DateFormat"/>
    </logger>
    <logger name="INFO">
      <level value="ALL"/>
      <appender-ref ref="RollingLogFileAppender_DateFormat"/>
    </logger>
    <logger name="Error">
      <level value="ALL"/>
      <appender-ref ref="SqlLogErrAppender_DateFormat"/>
    </logger>
    <appender name="RollingLogFileAppender_DateFormat" type="log4net.Appender.RollingFileAppender">
      <!--日志文件路径，“/”与“\”作用相同，到达的目录相同，文件夹不存在则新建 -->
      <!--按文件大小方式输出时在这里指定文件名，并且当天的日志在下一天时在文件名后自动追加当天日期形成新文件。-->
      <!--按照日期形式输出时，直接连接元素DatePattern的value形成文件路径。此处使用这种方式-->
      <file value="./LOG/INFO/"/>
      <!--是否追加到文件-->
      <appendToFile value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--使用Unicode编码-->
      <Encoding value="UTF-8"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite"/>
      <!--按照 “年-月-日_小时”生成log文件-->
      <datePattern value="yyyy/MMdd&quot;.log&quot;"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeToRollBackups value="-1"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
          超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
          可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <!--<maximumFileSize value="5MB" />-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="记录时间：%date{HH:mm:ss}|消息：%message%newline"/>
      </layout>
    </appender>
    <appender name="SqlLogFileAppender_DateFormat" type="log4net.Appender.RollingFileAppender">
      <!--日志文件路径，“/”与“\”作用相同，到达的目录相同，文件夹不存在则新建 -->
      <!--按文件大小方式输出时在这里指定文件名，并且当天的日志在下一天时在文件名后自动追加当天日期形成新文件。-->
      <!--按照日期形式输出时，直接连接元素DatePattern的value形成文件路径。此处使用这种方式-->
      <file value="./LOG/SQL/"/>
      <!--是否追加到文件-->
      <appendToFile value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--使用Unicode编码-->
      <Encoding value="UTF-8"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite"/>
      <!--按照 “年-月-日_小时”生成log文件-->
      <datePattern value="yyyy/MMdd&quot;.log&quot;"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeToRollBackups value="-1"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
          超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
          可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <!--<maximumFileSize value="5MB" />-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="记录时间：%date{HH:mm:ss}|消息：%message%newline"/>
      </layout>
    </appender>
    <appender name="SqlLogErrAppender_DateFormat" type="log4net.Appender.RollingFileAppender">
      <!--日志文件路径，“/”与“\”作用相同，到达的目录相同，文件夹不存在则新建 -->
      <!--按文件大小方式输出时在这里指定文件名，并且当天的日志在下一天时在文件名后自动追加当天日期形成新文件。-->
      <!--按照日期形式输出时，直接连接元素DatePattern的value形成文件路径。此处使用这种方式-->
      <file value="./LOG/Error/"/>
      <!--是否追加到文件-->
      <appendToFile value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--使用Unicode编码-->
      <Encoding value="UTF-8"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite"/>
      <!--按照 “年-月-日_小时”生成log文件-->
      <datePattern value="yyyy/MMdd&quot;.log&quot;"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeToRollBackups value="-1"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
          超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
          可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <!--<maximumFileSize value="5MB" />-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="记录时间：%date{HH:mm:ss}|消息：%message%newline"/>
      </layout>
    </appender>
  </log4net>
</configuration>